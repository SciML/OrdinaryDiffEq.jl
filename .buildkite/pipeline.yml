steps:
  - label: "GPU"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - staticfloat/metahook:
          pre-command: |
            julia --project=. -e '
              using Pkg;
              Pkg.develop(map(path ->Pkg.PackageSpec.(;path="$(@__DIR__)/lib/$(path)"), readdir("./lib")));
              Pkg.instantiate();
            '
      - JuliaCI/julia-test#v1:
           coverage: false # 1000x slowdown
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      GROUP: 'GPU'
      JULIA_PKG_SERVER: "" # it often struggles with our large artifacts
      # SECRET_CODECOV_TOKEN: "..."
    timeout_in_minutes: 60
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

  - label: "{{matrix.group}} v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1"
        group:
          - "Regression_I"
          - "Regression_II"
          - "Multithreading"
          - "Integrators_II"
          - "InterfaceIV"
          - "InterfaceV"
    env:
      BUILDKITE_PLUGIN_JULIA_VERSION: "{{matrix.version}}"
      GROUP: "{{matrix.group}}"
    plugins:
      - JuliaCI/julia#v1
      - staticfloat/metahook:
          pre-command: |
            julia --project=. -e '
              using Pkg;
              Pkg.develop(map(path ->Pkg.PackageSpec.(;path="$(@__DIR__)/lib/$(path)"), readdir("./lib")));
              Pkg.instantiate();
            '
      - JuliaCI/julia-test#v1:
          coverage: false
          julia_args: "--threads=auto"
    agents:
      os: "linux"
      queue: "juliaecosystem"
      arch: "x86_64"
    timeout_in_minutes: 240
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/
